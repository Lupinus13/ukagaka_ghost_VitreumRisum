＃ver0.29.3
＃英語処理

＠enらんだむ短文
（平叙文）
＃（名詞節）
＃（疑問文）



＠en作文a
（en生成前_初期化）φ
（call,en文頭大文字化,（en主語句生成） （call,en動詞句生成,a）.）

＠en作文be
（en生成前_初期化）φ
（set,en主語句,（en主語句生成））φ
（call,en文頭大文字化,（en主語句） （call,enbe動詞句生成,（en主語句）,（en時制）,（en主語単複）） （call,en形容詞句処理,叙述用法）.）

＠en作文c
（en生成前_初期化）φ
（call,en文頭大文字化,（en主語句生成） （call,en動詞句生成,c） （en目的語句生成）.）


＃もろもろの情報を初期化する
＃ローカル変数さえあれば…
＠en生成前_初期化
（set,en主語処理中,0）（set,en主語単複,単数）（set,en主語人称,3）（set,en時制,（choice,現在,過去））（set,三単現つけるフラグ,1）（set,en形容詞修飾制御,2）

＃（call,en文頭大文字化,「変換したい文字列」）
＃ごりおし〜！！！
＠en文頭大文字化
（whenlist,（at,（Ａ０）,0）＝＝
	,a,A
	,b,B
	,c,C
	,d,D
	,e,E
	,f,F
	,g,G
	,h,H
	,i,I
	,j,J
	,k,K
	,l,L
	,m,M
	,n,N
	,o,O
	,p,P
	,q,Q
	,r,R
	,s,S
	,t,T
	,u,U
	,v,V
	,w,W
	,x,X
	,y,Y
	,z,Z
	,（at,（Ａ０）,0）
）（substr,（Ａ０）,1）

＃主語取得
＃条件分岐
＃合成
＃勝利
＠en主語句生成
（set,en主語処理中,1）φ
（when,（乱数1〜8）＝＝1,（en主語代名詞_3）,（en名詞句処理））φ
（set,en主語処理中,0）

＠en目的語句生成
（en名詞句処理）


＠en名詞句処理
（en名詞）（set,en不定冠詞,（en名詞冠詞））（set,en形容詞修飾フラグ,
	（whenlist,（en形容詞修飾制御）＝＝
		,0,0
		,1,1
		,（乱数0〜7）
	）
）φ
（when,（en形容詞修飾フラグ）＝＝1,（set,en形容詞修飾形,（call,en形容詞句処理,限定用法））（set,en不定冠詞,（en形容詞冠詞）））φ
（whenlist,（en可算種別）＝＝
	,c,（when,（乱数0〜1）＝＝1
			,（call,en名詞句処理_十五島,（choice,the ,（en不定冠詞） ,（en所有格） ））（en名詞本体）
			,（call,en名詞句処理_十五島,（choice,the ,（en所有格） ,（en数詞） ,））（call,en名詞複数形,（en名詞本体））
		）
	,p,（call,en名詞句処理_十五島,（choice,the ,（en所有格） ,（en数詞） ,））（call,en名詞複数形,（en名詞本体））
	,u,（call,en名詞句処理_十五島,（choice,the ,（en所有格） ,））（en名詞本体）
）

＃単に邪魔だったから切り出しただけなんだけどそんなにすっきりしなかったので死
＠en名詞句処理_十五島
（when,（en形容詞最上級フラグ）＝＝1＆＆（en形容詞修飾フラグ）＝＝1,the ,（Ａ０））（when,（en形容詞修飾フラグ）＝＝1,（en形容詞修飾形） ）


＃取り出す→変化を見る→分岐して処理に掛ける→形容詞ができる
＠en形容詞句処理
（en形容詞_（Ａ０））（set,en形容詞最上級フラグ,0）φ
（when,（en形容詞変化）＝＝0
	,（en形容詞本体）
	,（whenlist,（乱数1〜6）＝＝
		,1,（call,en形容詞変化処理,r,（en形容詞本体）,（en形容詞変化））
		,2,（call,en形容詞変化処理,st,（en形容詞本体）,（en形容詞変化））（set,en形容詞最上級フラグ,1）
		,（en形容詞本体）
	）
）

＃みればわかる
＠en形容詞変化処理
（whenlist,（Ａ２）＝＝
		,1,（when,（Ａ０）＝＝r,more ,most ）（Ａ１）
		,2,（Ａ１）e（Ａ０）
		,3,（Ａ１）（Ａ０）
		,4,（substr,（Ａ１）,0,（length,（Ａ１））-1）ie（Ａ０）
		,5,（Ａ１）（at,（Ａ１）,（length,（Ａ１））-1）e（Ａ０）
		,（Ａ１）e（Ａ０）
）




＠enbe動詞句生成
（whenlist,（Ａ０）
	,＝＝I,（when,（Ａ１）＝＝現在
			,am
			,was
		）
	,＝＝you,（when,（Ａ１）＝＝現在
			,are
			,were
		）
	,（when,（Ａ２）＝＝単数
			,（when,（Ａ１）＝＝現在
				,is
				,was
			）
			,（when,（Ａ１）＝＝現在
				,are
				,were
			）
		）
）（when,（乱数1〜4）＝＝1, not）


＠en動詞句生成
（en動詞（Ａ０））φ
（when,（乱数1〜4）＝＝1
	,（when,（en主語単複）＝＝単数＆＆（en主語人称）＝＝3＆＆（en時制）＝＝現在
		,（choice,does not ,doesn't ）（set,三単現つけるフラグ,0）
		,（when,（en時制）＝＝現在
			,（choice,do not ,don't ）
			,（choice,did not ,didn't ）（set,en時制,現在）
		）
	）
）φ
（when,（en主語単複）＝＝単数＆＆（en主語人称）＝＝3＆＆（en時制）＝＝現在＆＆（三単現つけるフラグ）＝＝1
	,（call,en動詞三単現,（en動詞本体））
	,（when,（en時制）＝＝現在
		,（en動詞本体）
		,（call,en動詞過去形,（en動詞本体））
	）
）


＃単複は複数形にするときとればいいじゃんという謎の発想
＠en名詞複数形
（when,（en名詞変化）＝＝i
	,（en不規則名詞）
	,（whenlist,（at,（Ａ０）,（length,（Ａ０））-1）
		,＝＝s,（Ａ０）es
		,＝＝x,（Ａ０）es
		,＝＝o,（Ａ０）es
		,＝＝f,（substr,（Ａ０）,0,（length,（Ａ０））-2）ves
		,＝＝e,（when,（at,（Ａ０）,（length,（Ａ０））-1）＝＝f
			,（substr,（Ａ０）,0,（length,（Ａ０））-3）ves
			,（Ａ０）s
			）
		,＝＝y,（when,（count,aiueo,（at,（Ａ０）,（length,（Ａ０））-2））
			,（Ａ０）s
			,（substr,（Ａ０）,0,（length,（Ａ０））-1）ies
			）
		,＝＝h,（when,（count,sc,（at,（Ａ０）,（length,（Ａ０））-2））
			,（Ａ０）es
			,（Ａ０）s
			）
		,（Ａ０）s
	）
）（when,（en主語処理中）＝＝1,（set,en主語単複,複数））


＠en動詞三単現
（when,（Ａ０）＝＝have
	,has
	,（whenlist,（at,（Ａ０）,（length,（Ａ０））-1）
		,＝＝s,（Ａ０）es
		,＝＝x,（Ａ０）es
		,＝＝o,（Ａ０）es
		,＝＝y,（when,（count,aiueo,（at,（Ａ０）,（length,（Ａ０））-2））
			,（Ａ０）s
			,（substr,（Ａ０）,0,（length,（Ａ０））-1）ies
			）
		,＝＝h,（when,（count,sc,（at,（Ａ０）,（length,（Ａ０））-2））
			,（Ａ０）es
			,（Ａ０）s
			）
		,（Ａ０）s
	）
）

＠en動詞過去形
（whenlist,（en動詞変化）＝＝
		,0,（en不規則動詞過去形）
		,1,（Ａ０）ed
		,2,（Ａ０）d
		,3,（substr,（Ａ０）,0,（length,（Ａ０））-1）ied
		,4,（Ａ０）（at,（Ａ０）,（length,（Ａ０））-1）ed
		,（Ａ０）ed
）

＠en名詞セット
（nop,
	（set,en名詞冠詞,（Ａ０））
	（set,en名詞本体,（Ａ１））
	（when,（Ａ２）＝＝cu
		,（set,en可算種別,（choice,c,u））
		,（set,en可算種別,（Ａ２））
	）
	（set,en名詞変化,（Ａ３））
	（when,（Ａ３）＝＝i,（set,en不規則名詞,（Ａ４）））
）


＠en動詞セット
（nop,
	（set,en動詞冠詞,（Ａ０））
	（set,en動詞本体,（Ａ１））
	（set,en動詞変化,（Ａ２））
	（when,（Ａ２）＝＝0
		,（set,en不規則動詞過去形,（Ａ３））（set,en不規則動詞過去分詞,（Ａ４））
	）
）

＠en形容詞セット
（nop,
	（set,en形容詞冠詞,（Ａ０））
	（set,en形容詞本体,（Ａ１））
	（set,en形容詞変化,（Ａ２））
）


＊でばっぐ_英語系
\0\b[2]
＿ランダム三単現	でばっぐ_ランダム三単現
＿ランダム名詞複数形	でばっぐ_ランダム名詞複数形
＿入力三単現	でばっぐ_入力三単現
＿入力名詞複数形	でばっぐ_入力名詞複数形

＿作文てすと	でばっぐ_英作文

\0\b[2]\![quicksection,true]
\![*]\q[en形容詞修飾制御,On設定変更_処理,en形容詞修飾制御,2,でばっぐ_英語系]　φ：（whenlist,（en形容詞修飾制御）＝＝,0,オフ,1,オン,2,ランダム）

\q[en作文a,Onでばっぐ_en活用テスト汎用,en作文a]
\q[en作文be,Onでばっぐ_en活用テスト汎用,en作文be]
\q[en作文c,Onでばっぐ_en活用テスト汎用,en作文c]
\q[en名詞句,Onでばっぐ_en活用テスト汎用,en名詞句処理]

\q[enろぐ,On持ち物表示処理,1,enでばっぐ活用ろぐ,_]


\1（call,めにゅー末尾,でばっぐ）


＊でばっぐ_ランダム三単現
\0（set,でばっぐ_三単現さんぷる,（en動詞a））原型　φ：（でばっぐ_三単現さんぷる）
三単現φ：（call,en動詞三単現,（でばっぐ_三単現さんぷる））
\1\q[もっかい,でばっぐ_ランダム三単現]
（call,めにゅー末尾,でばっぐ_英語系）

＊でばっぐ_入力三単現
\![open,inputbox,でばっぐ_三単現さんぷる]

＊でばっぐ_三単現さんぷる入力ぼっくす
\0原型　φ：（でばっぐ_三単現さんぷる）
三単現φ：（call,en動詞三単現,（でばっぐ_三単現さんぷる））
\1\q[もっかい,でばっぐ_入力三単現]
（call,めにゅー末尾,でばっぐ_英語系）


＊でばっぐ_ランダム名詞複数形
\0（set,でばっぐ_名詞複数形さんぷる,（en名詞））原型　φ：（でばっぐ_名詞複数形さんぷる）
複数形φ：（call,en名詞複数形,（でばっぐ_名詞複数形さんぷる））
\1\q[もっかい,でばっぐ_ランダム名詞複数形]
（call,めにゅー末尾,でばっぐ_英語系）

＊でばっぐ_入力名詞複数形
\![open,inputbox,でばっぐ_名詞複数形さんぷる]

＊でばっぐ_名詞複数形さんぷる入力ぼっくす
\0原型　φ：（でばっぐ_名詞複数形さんぷる）
複数形φ：（call,en名詞複数形,（でばっぐ_名詞複数形さんぷる））
\1\q[もっかい,でばっぐ_入力名詞複数形]
（call,めにゅー末尾,でばっぐ_英語系）

＊でばっぐ_英作文
\0（en作文（choice,a,c,be））
\1\q[もっかい,でばっぐ_英作文]
（call,めにゅー末尾,でばっぐ_英語系）


＃目次：ここからでばっぐ用のテスト領域

＊Onでばっぐ_en活用テスト汎用
\0\b[2]\![quicksection,true]（Ｒ０）
（set,enでばっぐ活用ろぐ,（enでばっぐ活用ろぐ）_（Ｒ０）_（現在タイムスタンプ）（version表示）_形容詞（en形容詞修飾制御）_予備0_予備1_予備2_予備3_予備4_予備5_予備6）
（for,0,9,1,（set,enでばっぐ活用ろぐtemp,（（Ｒ０）））（set,enでばっぐ活用ろぐ,（enでばっぐ活用ろぐ）_（enでばっぐ活用ろぐtemp））（enでばっぐ活用ろぐtemp）\n）
（set,enでばっぐ活用ろぐtemp,）
\1\q[もっかい,Onでばっぐ_en活用テスト汎用,（Ｒ０）]

（call,めにゅー末尾,でばっぐ_英語系）