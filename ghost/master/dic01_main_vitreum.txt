＃ver0.28.3
＃めも
＃あるいはあらゆるものであるがゆえになにものでもないものについて
＃否定と否定の境界上で笑うもの
＃VitreumRisum
＃笑うガラス
＃ガラスのような笑い
＃意味はないのだと笑うこと


＃バージョン上げたら書き換えてください
＃適当なのでずれてることがおおい
＠version表示
ver0.28.3


＃目次：イベント各種
＃起動・終了系

＃単語群は好きにやっていきたい、そういう気持ち
＊OnSatoriLoad
＄単語群「＊」の重複回避	無効
＃（when,（音声フラグ）＝＝1,（softalk（バイト値,1）/X:0 /Z:C:\\Users\\kazun\\Desktop\\つーる\\うかがか\\ghost\\VitreumRisum\\ghost\\master\\saori\\voice\\voicelist.txt））

＃＊OnSatoriUnload
＃（softalk（バイト値,1）/close_now）

＊OnFirstBoot
（起動時シェル位置処理）
＞はじめましてのことば

＊OnBoot		（ぱすわーど）＝＝0
（起動時シェル位置処理）
＞はじめましてのことば

＊OnBoot		（ぱすわーど）＝＝1
（起動時シェル位置処理）\0（挨拶する）


＊OnClose
\0（挨拶する）



＃バルーン位置同期用の処理
＃起動時に通過
＠起動時シェル位置処理
\1\![move,--X=-250,--Y=0,--base=0]\![set,sticky-window,1,0]\p[3]


＃なんかかんがえとく
＊はじめましてのことば
\0Vitreum 起動しました
＞パスワード要求	（ぱすわーど）＝＝0

＃パスワード系
＃ロックが解除されるまでパスワードを要求します
＃あちこちから飛んでくる
＃＞パスワード要求	（ぱすわーど）＝＝0
＊パスワード要求
\0パスワードを 入力してください
\![open,inputbox,起動パス]

＃ぱすわーど判定
＊起動パス入力ぼっくす
（when,（compare,（起動パス）,HarmoniaMaris）,（set,ぱすわーど,1）,（set,ぱすわーど,0））
＞認証OK	（ぱすわーど）＝＝1
＞認証NG	（ぱすわーど）＝＝0

＊認証OK
\0パスワードを 確認しました
生成を 開始します

＊認証NG
\0パスワードが 違います
\1
＿もう一度入力する	パスワード要求
＿パスワードがわからない	パスワード不明

＃「これ読めよ」
＊パスワード不明
\![open,readme]


＠挨拶する	（二人称トークふらぐ）＝＝0
（挨拶）

＠挨拶する	（二人称トークふらぐ）＝＝1
（感動詞）、（二人称b）\n（挨拶）
（感動詞）、（挨拶）\n（二人称b）
（二人称b）\n（挨拶）
（挨拶）\n（二人称b）


＃通知系
＃シェル管理用
＊OnNotifyShellInfo
＄現在のシェル	（Ｒ０）

＃各種変更反応
＊OnShellChanging
\0（変更応答）

＠変更応答
シェルを再定義します。
外殻の再生。

＃目次：ユーザー操作関連イベント
＃左ダブルクリックでランダムトーク
＃ミドルクリックでメニュー
＊OnMouseDoubleClick
＞パスワード要求	（ぱすわーど）＝＝0
＞

＊OnMouseClickEx
＞めにゅー	（Ｒ５）＝＝middle＆＆（ぱすわーど）＝＝1
＞パスワード要求	（Ｒ５）＝＝middle＆＆（ぱすわーど）＝＝0

＃しょとかっと
＊rが押された
（call,らんだむとーく_もういっかい_処理,SJIS,0）

＊dが押された
＞でばっぐ	（でばっぐもーど）＝＝1



＃目次：ランダムトーク

＃らんだむとーくやつ
＊
＞らんだむとーく	（ぱすわーど）＝＝1
…

＃短文を呼ぶための準備（パラメータ初期化、過去トーク格納）
＃→短文召喚
＃→シェル処理
＃→音声処理
＊らんだむとーく
＞らんだむイベント	（乱数1〜20）＝＝1
\0（必要に応じて再生成するやつ）（文制御フラグをランダム化するやつ）（短文を順次格納するやつ）（set,短文入れ0,（らんだむ短文））φ
（whenlist,（現在のシェル）＝＝
	,master,（when,（羽根色_変更タイミング）＝＝2｜｜（羽根色_変更タイミング）＝＝1＆＆（自己トーク）＝＝1
		,（羽根色シャッフル）
	）
	,cubical,（when,（箱色_変更タイミング）＝＝2｜｜（箱色_変更タイミング）＝＝1＆＆（自己トーク）＝＝1
		,（箱色シャッフル）
	）
）φ
（set,自己トーク,0）φ
（when,（音声フラグ）＝＝1
	,（call,OnSofTalk,（短文入れ0））（短文入れ0）
	,（短文入れ0）
）



＃使ってたら補充するよ
＠必要に応じて再生成するやつ
（nop,
	（when,（文再生成ふらぐ）＝＝1
		,（set,補語文_ストック,（jp補語文生成））（set,文再生成ふらぐ,0）
	）
	（when,（事再生成ふらぐ）＝＝1
		,（set,補語事_ストック,（jp補語事生成））（set,事再生成ふらぐ,0）
	）
）

＃パラメータ準備するよ
＠文制御フラグをランダム化するやつ
（nop,
	（set,倒置フラグ制御,2）（set,主題化フラグ制御,2）（set,疑問フラグ制御,2）（set,連用修飾制御,2）（set,形容いな制御,2）（set,be疑問制御,2）
	（for,1,4,1,（set,助動詞_（nswitch,（Ｃ０）,補助,たい,ない,過去）制御,2））（set,語生成ふらぐ,0）（set,でばっぐふらぐA,0）
）

＃ひとつずつずらすよ
＠短文を順次格納するやつ
（for,3,0,-1,（set,短文入れ（calc,（Ｃ０）+1）,（短文入れ（Ｃ０））））

＃（うに文を順次格納するやつ）
＠うに文を順次格納するやつ
（for,3,0,-1,（set,uni文入れ（calc,（Ｃ０）+1）,（uni文入れ（Ｃ０））））


＃リストだよ
＠らんだむ短文	（らんだむとーく選択_JP）＝＝0＆＆（らんだむとーく選択_EN）＝＝0
生成対象がありません。

＠らんだむ短文	（らんだむとーく選択_JP）＝＝1
（set,自己トーク,1）（一人称）は……
（set,自己トーク,1）（一人称）は（5W1H疑問）？
（動詞文）
（動詞文）
（動詞文）
（動詞文）
（動詞文）
（動詞文）
（形容詞文）
（形容詞文）
（形容詞文）
（名詞_連体）の（名詞）

＠らんだむ短文	（らんだむとーく選択_JP）＝＝1＆＆（二人称トークふらぐ）＝＝1
（感動詞）、（二人称b）
（二人称b）
（意向文）

＠らんだむ短文	（らんだむとーく選択_JP）＝＝1＆＆（でばっぐもーど）＝＝1
（料理）

＠らんだむ短文	（らんだむとーく選択_EN）＝＝1
（en作文a）
（en作文be）
（en作文c）


＃らんだむ発生します。今のところ１種類。
＊らんだむイベント
＞イベント_何かを拾う

＃なんかひろってなんかしまうよ。
＊イベント_何かを拾う
（whenlist,（乱数1〜3）
	,＜＝2,（set,拾い物,（連体修飾句））（set,持ち物,（持ち物）_（拾い物））\0 [（拾い物）を拾った]
	,＜＝3,（set,拾い物_EN,（set,en形容詞修飾制御,1）（en名詞句処理））（set,持ち物_EN,（持ち物_EN）_（拾い物_EN））\0 [（拾い物_EN）を拾った]
）


＃目次：めにゅー
＊めにゅー
\0\b[2]\![quicksection,true]《メニュー予定地ですよ》
（set,語生成ふらぐ,0）（名詞）が（call,動詞,連体）

＿はじめまして	はじめましてのことば

\q[もう一回言って,Onらんだむとーく_もういっかい,SJIS,0]（when、（でばっぐもーど）＝＝1、φ：SJIS）
（when、（でばっぐもーど）＝＝1、\q[もう一回言って,Onらんだむとーく_もういっかい,UTF8,0]φ：UTF8\n）φ

\q[持ち物めにゅー,持ち物めにゅー]
＿スタンプ帳めにゅー
（when、（ほにゃくふらぐ）＝＝1、\q[ほにゃくめにゅー,ほにゃくめにゅー]）

＿せってい
＿シェルせってい
＿はろーわーるど	はろーわーるどめにゅー
＿てすと	てすとすぺーす01

（前面すこーぷ操作）\q[とじる,めにゅー_終了]


（when、（でばっぐもーど）＝＝1、\q[でばっぐ,でばっぐ]）


＃Ａ０番目の過去とーくを呼び出し
＊Onらんだむとーく_もういっかい
（call,らんだむとーく_もういっかい_処理,（Ｒ０）,（Ｒ１））

＃過去とーくを呼び出し。拾ったりコピーしたり。
＃Ａ０：文字コード
＃Ａ１：りれき番号
＊らんだむとーく_もういっかい_処理
\1\b[2]\q[こぴー,On文字列コピー,（Ａ０）,（短文入れ（Ａ１））,らんだむとーく_もういっかい_処理,（Ａ１）]

（whenlist、（Ａ０）＝＝
	、SJIS、\q[このトークをひろう,On持ち物拾得_ユーザー,（Ａ０）,（短文入れ（Ａ１））,らんだむとーく_もういっかい_処理,（Ａ１）]
	、UTF8、\q[このトークをひろう,On持ち物拾得_ユーザー,（Ａ０）,（uni文入れ（Ａ１））,らんだむとーく_もういっかい_処理,（Ａ１）]
	、ないです
）

（when、（Ａ１）！＝4、\q[ひとつ前,Onらんだむとーく_もういっかい,（Ａ０）,（calc,（Ａ１）+1）]）
（when、（Ａ１）！＝0、\q[ひとつ後,Onらんだむとーく_もういっかい,（Ａ０）,（calc,（Ａ１）-1）]）

（call,めにゅー末尾,めにゅー）
\0（whenlist、（Ａ０）＝＝
	、SJIS、（短文入れ（Ａ１））
	、UTF8、（call,uni,（uni文入れ（Ａ１）））
	、ないです
）




＊持ち物めにゅー
\0\b[2]\![quicksection,true]《持ち物めにゅー》

\![*]Vitreum
・\q[（名詞_入れ物）の中,On持ち物表示処理,1,持ち物,_]φ：JP
・\q[（名詞_入れ物）の中,On持ち物表示処理,1,持ち物_EN,_]φ：EN


\![*]User
・\q[（名詞_入れ物）の中,On持ち物表示処理,1,持ち物_ユーザー,_]（when、（でばっぐもーど）＝＝1、φ：SJIS）
（when、（でばっぐもーど）＝＝1、・\q[（名詞_入れ物）の中,On持ち物表示処理,1,持ち物_ユーザー_uni,と]φ：UTF8）

（call,めにゅー末尾,めにゅー）


＃目次：持ち物系処理
＃\q[（名詞_入れ物）の中,On持ち物表示処理,1,持ち物,_]
＃Ｒ０：現在ページ
＃Ｒ１：持ち物リスト名
＃Ｒ２：区切り
＃最初に持ち物分割→必要な数字の算出
＃うっとうしいのでウェイトタイプ無効に
＃持ち物名と区切り記号を渡す
＃算出した数字もグローバル変数で渡すのやめて直接渡せばいいと思う
＃終わったらリスト消してウェイト戻す
＊On持ち物表示処理
（nop,
	（split,（（Ｒ１））,（Ｒ２）,0,1）
	（set,持ち物数,（Ｓの数）-1）
	（for,0,（持ち物数）,（set,a_所持品置き場（Ｃ０）,（Ｓ（Ｃ０））））
	（set,ページ総数,
		（when,（持ち物数）％20＝＝0,（持ち物数）/20,1+（持ち物数）/20）
	）
	（set,現在のページ,（Ｒ０））
	（set,前のページ,（現在のページ）-1）
	（set,次のページ,（現在のページ）+1）
	（set,前のページまでの持ち物総数,（前のページ）*20）
	（set,持ち物ページ先頭,（前のページまでの持ち物総数）+1）
	（set,持ち物ページ末尾,（when,（現在のページ）＝＝（ページ総数）,（持ち物数）,（持ち物ページ先頭）+19））
）（set,自動挿入ウェイトタイプ,無効）（call,持ち物表示_メイン,（Ｒ１）,（Ｒ２））（for,0,（持ち物数）,（set,a_所持品置き場（Ｃ０）,））（set,自動挿入ウェイトタイプ,里々）

＃基本的に直接呼ぶことはないやつ
＃渡された持ち物名と区切り、現在ページから今いるとこを表示する
＃（call,持ち物表示_メイン,持ち物,_）
＃Ａ０：持ち物リスト名
＃Ａ１：区切り
＊持ち物表示_メイン
\0\b[2]\![quicksection,true]φ
（for,（持ち物ページ先頭）,（持ち物ページ末尾）,1
	,\![*]
	（when、（Ａ１）＝＝と
		、（call,uni,（a_所持品置き場（Ｃ０）））\q[■,On持ち物個別表示,UTF8,（a_所持品置き場（Ｃ０））,（Ａ０）,（Ａ１）]
		、\q[（a_所持品置き場（Ｃ０））,On持ち物個別表示,SJIS,（a_所持品置き場（Ｃ０））,（Ａ０）,（Ａ１）]
	）\n
）
（when、（前のページ）！＝0
	、\q[《,On持ち物表示処理,1,（Ａ０）,（Ａ１）] \q[〈,On持ち物表示処理,（前のページ）,（Ａ０）,（Ａ１）]
	、   ー
）【（現在のページ）/（ページ総数）】（when、（現在のページ）！＝（ページ総数）
	、\q[〉,On持ち物表示処理,（次のページ）,（Ａ０）,（Ａ１）] \q[》,On持ち物表示処理,（ページ総数）,（Ａ０）,（Ａ１）]
	、ー   
）
（when,（前面表示もーど）＝＝0,\1）（call,めにゅー末尾,持ち物めにゅー）



＃テスト中
＃\q[（a_所持品置き場（Ｃ０））,On持ち物個別表示,SJIS,（a_所持品置き場（Ｃ０））,（Ａ０）,（Ａ１）]
＊On持ち物個別表示
（call,持ち物個別表示_処理,（Ｒ０）,（Ｒ１）,（Ｒ２）,（Ｒ３））

＊持ち物個別表示_処理
\0（whenlist,（Ａ０）＝＝
	,UTF8,（call,uni,（Ａ１））
	,SJIS,（Ａ１）
	,なぞのこーどだよ\nＡ０φ：（Ａ０）\nＡ１φ：（Ａ１）
）

\1\b[2]《持ち物個別めにゅー》

\q[こぴー,On文字列コピー,（Ａ０）,（Ａ１）,持ち物個別表示_処理,（Ａ２）,（Ａ３）]
\q[このトークをひろう,On持ち物拾得_ユーザー,（Ａ０）,（Ａ１）,持ち物個別表示_処理,（Ａ２）,（Ａ３）]
（when、（音声フラグ）＝＝1、\q[読んでみて,Onおんどく,（Ａ０）,（Ａ１）,持ち物個別表示_処理,（Ａ２）,（Ａ３）]）
（when、（ほにゃくふらぐ）＝＝1、\q[転写してみる_しんぷる,On文字列転写_しんぷる,（Ａ０）,（Ａ１）,持ち物個別表示_処理,（Ａ２）,（Ａ３）]）
（when、（ほにゃくふらぐ）＝＝1、\q[転写してみる_きさらぎ,On文字列転写_きさらぎ,（Ａ０）,（Ａ１）,持ち物個別表示_処理,（Ａ２）,（Ａ３）]）

\q[もどる,On持ち物表示処理,（現在のページ）,（Ａ２）,（Ａ３）]


＃目次：スタンプ帳プラグイン関連
＊スタンプ帳めにゅー
\0\b[2]《スタンプ帳めにゅー》

にゃん
＿スタンプ押す
＿スタンプ帳確認


（call,めにゅー末尾,めにゅー）

＊スタンプ押す
\0\![raiseplugin,スタンプ帳,OnStampAdd,ghost\master\stamp_vit.png,VitreumRisum,誰かが望んだ夢の欠片。]スタンプを押しました。


（call,めにゅー末尾,スタンプ帳めにゅー）

＊スタンプ帳確認
\0\![raiseplugin,スタンプ帳,OnMenuExec]スタンプ帳を開きます。

（call,めにゅー末尾,スタンプ帳めにゅー）


＊ほにゃくめにゅー
\0\b[2]《ほにゃくめにゅー》
\q[転写してみる_しんぷる,On文字列転写_しんぷる,SJIS,（ほにゃくせんてんす）,ほにゃくめにゅー]
\q[転写してみる_きさらぎ,On文字列転写_きさらぎ,SJIS,（ほにゃくせんてんす）,ほにゃくめにゅー]

\![*]\q[ほにゃくこてい,On設定変更_処理,ほにゃくこてい,1,ほにゃくめにゅー]φ
【現在φ：（whenlist,（ほにゃくこてい）＝＝,0,してい,1,らんだむ）】
\![*]\q[ほにゃくしてい,On設定変更_処理,ほにゃくしてい,5,ほにゃくめにゅー]φ
【現在φ：（whenlist,（ほにゃくしてい）＝＝,0,まぜまぜ,1,Kana,2,Hira,3,Latn,4,Hang,5,Deva）】

\![*]\q[ほにゃくせんてんす入力,ほにゃくせんてんす_にゅうりょく]
【現在φ：（ほにゃくせんてんす）】

（call,めにゅー末尾,めにゅー）

＊ほにゃくせんてんす_にゅうりょく

\![open,inputbox,ほにゃくせんてんす]

（call,めにゅー末尾,ほにゃくめにゅー）

＊ほにゃくせんてんす入力ぼっくす
＞ほにゃくめにゅー


＃目次：設定色々
＃ほぼ無である
＊せってい
\0\b[2]\![quicksection,true]《せってい》

\![*]\q[ユーザ名を変える,ユーザ名を変える]
\![*]\q[二人称トーク,On設定変更_処理,二人称トークふらぐ,1,せってい]φ
φ：（whenlist,（二人称トークふらぐ）＝＝,0,OFF,1,ON）
\![*]\q[前面表示もーど,On設定変更_処理,前面表示もーど,1,せってい]φ
φ：（whenlist,（前面表示もーど）＝＝,0,OFF,1,ON）

\![*]（whenlist、（ほにゃくふらぐ）＝＝、0、\q[ほにゃく機能,ほにゃくおん]、1、\q[ほにゃく機能,On設定代入_処理,ほにゃくふらぐ,0,せってい]）φ
φ：（whenlist,（ほにゃくふらぐ）＝＝,0,OFF,1,ON）
＿　ほにゃくとは？	ほにゃくせつめい

\![*]\q[JPとーく,On設定変更_処理,らんだむとーく選択_JP,1,せってい]φ
φ：（whenlist,（らんだむとーく選択_JP）＝＝,0,OFF,1,ON）
\![*]\q[ENとーく,On設定変更_処理,らんだむとーく選択_EN,1,せってい]φ
φ：（whenlist,（らんだむとーく選択_EN）＝＝,0,OFF,1,ON）

喋り間隔　φ：（for、0、180、30、\q[（when,（喋り間隔）＞＝（Ｃ０）,■,□）,On設定代入_処理,喋り間隔,（Ｃ０）,せってい]）
【現在φ：（when,（喋り間隔）＝＝0,トーク停止,（喋り間隔）秒）】
セーブ間隔φ：（for、0、360、60、\q[（when,（自動セーブ間隔）＞＝（Ｃ０）,■,□）,On設定代入_処理,自動セーブ間隔,（Ｃ０）,せってい]）
【現在φ：（when,（自動セーブ間隔）＝＝0,自動セーブなし,（自動セーブ間隔）秒）】


\q[せーぶする,On設定代入_処理,手動セーブ,実行,せってい]

（前面すこーぷ操作）（call,めにゅー末尾,めにゅー）



＊ユーザ名を変える
\0\![open,inputbox,ユーザ名]
あなたが呼ばれたい名前を入力してください

＊ユーザ名入力ぼっくす
\0（ユーザ名）……
登録されました


（call,めにゅー末尾,せってい）

＊ほにゃくおん
\0\b[2]\![quicksection,true]《ほにゃく機能の注意事項》

※本機能は現在α版です。
※翻訳機能ではありません。
※転写機能でもないです。
※本機能はジョーク機能です。
※本機能を使用した事によるいかなる損害に対しても、作者は一切の責任を負いません。

上記に同意し、本機能を利用されたい方は「はい」を、
それ以外の方は「いいえ」を選択してください

\![*]\q[はい,On設定代入_処理,ほにゃくふらぐ,1,せってい]
\![*]\q[いいえ,On設定代入_処理,ほにゃくふらぐ,0,せってい]


＊ほにゃくせつめい
\0\b[2]\![quicksection,true]《ほにゃくとは》
ほにゃく機能は、VitreumRisumに実装された謎機能の一つです。
翻訳ではなく、音の要素だけをほかの文字体系に移し替えるような変換を行います。

ひらがな→ラテン文字のほにゃく例
・あいうえお→aiueo
・こんにちは→konnnitiha

\![*]現在実装されている文字
ほにゃく元φ：ひらがな、カタカナ
ほにゃく先φ：ラテン文字、ハングル、デーヴァナーガリー

\![*]注意事項
翻訳機能ではないです。
拗音促音などの変換がだいぶ怪しいです。

（call,めにゅー末尾,せってい）



＃目次：シェル設定
＃（仮）
＊シェルせってい
\0\b[2]\![quicksection,true]《シェルせってい》

いまのシェルは「（現在のシェル）」

\q[シェルを「master」へ,Onシェル変える処理,master,シェルせってい]
\q[シェルを「cubical」へ,Onシェル変える処理,cubical,シェルせってい]

\q[「master」せってい,「master」せってい]
\q[「cubical」せってい,「cubical」せってい]


（前面すこーぷ操作）（call,めにゅー末尾,めにゅー）

＊Onシェル変える処理
\![change,shell,（Ｒ０）]\p[3]
＞（Ｒ１）


＊「master」せってい
\0\b[2]\![quicksection,true]《「master」せってい》

\![*]\q[変更タイミング,On設定変更_処理,羽根色_変更タイミング,2,「master」せってい]φ
φ：（whenlist,（羽根色_変更タイミング）＝＝,0,固定,1,自己トーク毎,2,トーク毎）
\![*]\q[変更パターン,On設定変更_処理,羽根色_変更パターン,3,「master」せってい]　φ
φ：（whenlist,（羽根色_変更パターン）＝＝,0,ランダム,1,左右対称,2,同系色A,3,同系色B）

\q[らんだむに着せ替える,らんだむ着せ替え_master]
\q[手作業で着せ替える,手作業着せ替え入力_master]


（前面すこーぷ操作）（call,めにゅー末尾,シェルせってい）

＊らんだむ着せ替え_master
\1（羽根色シャッフル）\p[3]
＞「master」せってい

＊手作業着せ替え入力_master
\0\b[2]\![quicksection,true]《「master」せってい》

範囲φ：01〜27

\q[a_1,On数字選択モジュール_0010,手作業着せ替え入力_master,手前1,0]φ：（手前1）φ
　　　\q[b_1,On数字選択モジュール_0010,手作業着せ替え入力_master,奥側1,0]φ：（奥側1）
\q[a_2,On数字選択モジュール_0010,手作業着せ替え入力_master,手前2,0]φ：（手前2）φ
　　　\q[b_2,On数字選択モジュール_0010,手作業着せ替え入力_master,奥側2,0]φ：（奥側2）
\q[a_3,On数字選択モジュール_0010,手作業着せ替え入力_master,手前3,0]φ：（手前3）φ
　　　\q[b_3,On数字選択モジュール_0010,手作業着せ替え入力_master,奥側3,0]φ：（奥側3）

\q[a一括,On数字選択モジュール_0010,手作業着せ替え入力_a一括_master,手前1,0]φ
　　　　 \q[b一括,On数字選択モジュール_0010,手作業着せ替え入力_b一括_master,奥側1,0]

\q[左右対称にするa,左右対称セットa_master]φ（a→bφ：上書きφ）
\q[左右対称にするb,左右対称セットb_master]φ（b→aφ：上書きφ）

\q[着せ替える,手作業着せ替え処理_master]


（前面すこーぷ操作）（call,めにゅー末尾,「master」せってい）


＊手作業着せ替え入力_a一括_master
\p[3]（for、2、3、1、（set,手前（Ｃ０）,（手前1）））
＞手作業着せ替え入力_master

＊手作業着せ替え入力_b一括_master
\p[3]（for、2、3、1、（set,奥側（Ｃ０）,（奥側1）））
＞手作業着せ替え入力_master


＊手作業着せ替え処理_master
\0（for、1、6、1、\![bind,羽根_（call,羽根呼び出し,（Ｃ０））,（（call,羽根呼び出し,（Ｃ０）））,1]）\p[3]
＞手作業着せ替え入力_master

＊左右対称セットa_master
\p[3]（for,1,3,1,（set,奥側（Ｃ０）,（手前（Ｃ０））））
＞手作業着せ替え入力_master

＊左右対称セットb_master
\p[3]（for,1,3,1,（set,手前（Ｃ０）,（奥側（Ｃ０））））
＞手作業着せ替え入力_master


＊「cubical」せってい
\0\b[2]\![quicksection,true]《「cubical」せってい》

\![*]\q[変更タイミング,On設定変更_処理,箱色_変更タイミング,2,「cubical」せってい]φ
φ：（whenlist,（箱色_変更タイミング）＝＝,0,固定,1,自己トーク毎,2,トーク毎）
\![*]\q[枠線種別,On設定変更_処理,箱色_枠線種別,2,「cubical」せってい]　　　φ
φ：（whenlist,（箱色_枠線種別）＝＝,0,ランダム,1,枠線A,2,枠線B）
\![*]\q[枠線有無,On設定変更_処理,箱色_枠線有無,2,「cubical」せってい]　　　φ
φ：（whenlist,（箱色_枠線有無）＝＝,0,ランダム,1,あり,2,なし）
\![*]\q[透明度,On設定変更_処理,箱色_透明度,2,「cubical」せってい]　　　　φ
φ：（whenlist,（箱色_透明度）＝＝,0,ランダム,1,半透明のみ,2,不透明のみ）

\q[らんだむに着せ替える,らんだむ着せ替え_cubical]
\q[手作業で着せ替える,手作業着せ替え入力_cubical]


（前面すこーぷ操作）（call,めにゅー末尾,シェルせってい）


＊らんだむ着せ替え_cubical
\1（箱色シャッフル）\p[3]
＞「cubical」せってい

＊手作業着せ替え入力_cubical
\0\b[2]\![quicksection,true]《「cubical」せってい》

範囲φ：01〜26 or 51〜76
※00を指定した場合選択解除

\q[soko,On数字選択モジュール_0010,手作業着せ替え入力_cubical,soko,0]φ：（soko）
\q[usiro,On数字選択モジュール_0010,手作業着せ替え入力_cubical,usiro,0]φ：（usiro）
\q[hidari,On数字選択モジュール_0010,手作業着せ替え入力_cubical,hidari,0]φ：（hidari）
\q[migi,On数字選択モジュール_0010,手作業着せ替え入力_cubical,migi,0]φ：（migi）
\q[mae,On数字選択モジュール_0010,手作業着せ替え入力_cubical,mae,0]φ：（mae）
\q[ue,On数字選択モジュール_0010,手作業着せ替え入力_cubical,ue,0]φ：（ue）
\q[haimenwaku,On数字選択モジュール_0010,手作業着せ替え入力_cubical,haimenwaku,0]φ：（haimenwaku）
\q[zenmenwaku,On数字選択モジュール_0010,手作業着せ替え入力_cubical,zenmenwaku,0]φ：（zenmenwaku）

\q[一括,On数字選択モジュール_0010,手作業着せ替え入力_一括_cubical,soko,0]

\q[着せ替える,手作業着せ替え処理_cubical]


（前面すこーぷ操作）（call,めにゅー末尾,「cubical」せってい）


＊手作業着せ替え入力_一括_cubical
\p[3]（for,1,6,1,（set,（call,箱呼び出しA,（Ｃ０））,（soko）））（for,1,2,1,（set,（call,箱呼び出しB,（Ｃ０））,（soko）））
＞手作業着せ替え入力_cubical


＊手作業着せ替え処理_cubical
\0（for、1、6、1
	、（when、（（call,箱呼び出しA,（Ｃ０）））＝＝0
		、\![bind,（call,箱呼び出しA,（Ｃ０））,,0]
		、\![bind,（call,箱呼び出しA,（Ｃ０））,（（call,箱呼び出しA,（Ｃ０）））,1]
	）
）φ
（for、1、2、1	
	、（when、（（call,箱呼び出しB,（Ｃ０）））＝＝0
		、\![bind,（call,箱呼び出しB,（Ｃ０））,,0]
		、\![bind,（call,箱呼び出しB,（Ｃ０））,（（call,箱呼び出しB,（Ｃ０）））,1]
	）
）\p[3]
＞手作業着せ替え入力_cubical




＃目次：はろーわーるど
＃\q[,Onいろいろなはろーわーるど,]φ：（call,uni,）
＃はろーわーるどを出すべく選択肢を列挙しています。右の文字はその言語における言語名の表記。
＊はろーわーるどめにゅー
\0\b[2]\![quicksection,true]《はろーわーるど》

\q[Afrikaans,Onいろいろなはろーわーるど,Afrikaans]φ：（call,uni,0041_0066_0072_0069_006B_0061_0061_006E_0073）
\q[Chinese,Onいろいろなはろーわーるど,Chinese]φ：（call,uni,4E2D_6587）
\q[Czech,Onいろいろなはろーわーるど,Czech]φ：（call,uni,010C_0065_0161_0074_0069_006E_0061）
\q[Dutch,Onいろいろなはろーわーるど,Dutch]φ：（call,uni,004E_0065_0064_0065_0072_006C_0061_006E_0064_0073）
\q[English,Onいろいろなはろーわーるど,English]φ：（call,uni,0045_006E_0067_006C_0069_0073_0068）
\q[Esperanto,Onいろいろなはろーわーるど,Esperanto]φ：（call,uni,045_0073_0070_0065_0072_0061_006E_0074_006F）
\q[French,Onいろいろなはろーわーるど,French]φ：（call,uni,0046_0072_0061_006E_00E7_0061_0069_0073）
\q[German,Onいろいろなはろーわーるど,German]φ：（call,uni,044_0065_0075_0074_0073_0063_0068）
\q[Greek,Onいろいろなはろーわーるど,Greek]φ：（call,uni,0395_03BB_03BB_03B7_03BD_03B9_03BA_03AC）
\q[Hindi,Onいろいろなはろーわーるど,Hindi]φ：（call,uni,0939_093F_0928_094D_0926_0940）
\q[Irish,Onいろいろなはろーわーるど,Irish]φ：（call,uni,0047_0061_0065_0069_006C_0067_0065）
\q[Japanese,Onいろいろなはろーわーるど,Japanese]φ：（call,uni,65E5_672C_8A9E）
\q[Korean,Onいろいろなはろーわーるど,Korean]φ：（call,uni,D55C_AD6D_C5B4）
\q[Malay,Onいろいろなはろーわーるど,Malay]φ：（call,uni,0042_0061_0068_0061_0073_0061_0020_004D_0065_006C_0061_0079_0075）
\q[Portuguese,Onいろいろなはろーわーるど,Portuguese]φ：（call,uni,0050_006F_0072_0074_0075_0067_0075_00EA_0073）
\q[Russian,Onいろいろなはろーわーるど,Russian]φ：（call,uni,0440_0443_0441_0441_043A_0438_0439）
\q[Spanish,Onいろいろなはろーわーるど,Spanish]φ：（call,uni,0045_0073_0070_0061_00F1_006F_006C）
\q[Swahili,Onいろいろなはろーわーるど,Swahili]φ：（call,uni,004B_0069_0073_0077_0061_0068_0069_006C_0069）
\q[Thai,Onいろいろなはろーわーるど,Thai]φ：（call,uni,0E20_0E32_0E29_0E32_0E44_0E17_0E22）
\q[Turkish,Onいろいろなはろーわーるど,Turkish]φ：（call,uni,0054_00FC_0072_006B_00E7_0065）
\q[Vietnamese,Onいろいろなはろーわーるど,Vietnamese]φ：（call,uni,0054_0069_1EBF_006E_0067_0020_0056_0069_1EC7_0074）

\1（call,めにゅー末尾,めにゅー）


＃指定された言語のはろーわーるどを返します。なぜか日本語もゆにこでになっています。
＊Onいろいろなはろーわーるど
\1\![quicksection,true]φ
（whenlist,（Ｒ０）＝＝
	,Afrikaans,（call,uni,0048_0065_006C_006C_006F_0020_0057_00EA_0072_0065_006C_0064_0021）
	,Chinese,（call,uni,4F60_597D_0020_4E16_754C_0021）
	,Czech,（call,uni,0041_0068_006F_006A_0020_0073_0076_011B_0074_0065_0021）
	,Dutch,（call,uni,0048_0061_006C_006C_006F_0020_0057_0065_0072_0065_006C_0064_0021）
	,English,（call,uni,0048_0065_006C_006C_006F_0020_0057_006F_0072_006C_0064_0021）
	,Esperanto,（call,uni,0053_0061_006C_0075_0074_006F_006E_0020_004D_006F_006E_0064_006F_0021）
	,French,（call,uni,0042_006F_006E_006A_006F_0075_0072_0020_006C_0065_0020_006D_006F_006E_0064_0065_0021）
	,German,（call,uni,0048_0061_006C_006C_006F_0020_0057_0065_006C_0074_0021）
	,Greek,（call,uni,0393_03B5_03B9_03AC_0020_03C3_03BF_03C5_0020_039A_03CC_03C3_03BC_03B5_0021_000D_000A）
	,Hindi,（call,uni,0928_092E_0938_094D_0924_0947_0020_0926_0941_0928_093F_092F_093E_0021）
	,Irish,（call,uni,0044_0069_0061_0020_0064_0075_0069_0074_0020_0061_006E_0020_0044_006F_006D_0068_0061_0069_006E_0021）
	,Japanese,（call,uni,3053_3093_306B_3061_306F_4E16_754C_0021）
	,Korean,（call,uni,C548_B155_0020_C138_C0C1_0021）
	,Malay,（call,uni,0048_0061_0069_0020_0064_0075_006E_0069_0061_0021）
	,Portuguese,（call,uni,004F_006C_00E1_0020_004D_0075_006E_0064_006F_0021）
	,Russian,（call,uni,041F_0440_0438_0432_0435_0442_002C_0020_043C_0438_0440_0021）
	,Spanish,（call,uni,0048_006F_006C_0061_0020_004D_0075_006E_0064_006F_0021）
	,Swahili,（call,uni,0053_0061_006C_0061_006D_0075_002C_0020_0044_0075_006E_0069_0061_0021）
	,Thai,（call,uni,0E2A_0E27_0E31_0E2A_0E14_0E35_0E0A_0E32_0E27_0E42_0E25_0E01_0021）
	,Turkish,（call,uni,0053_0065_006C_0061_006D_0020_0044_00FC_006E_0079_0061_0021）
	,Vietnamese,（call,uni,0043_0068_00E0_006F_0020_0074_0068_1EBF_0020_0067_0069_1EDB_0069_0021）
	,しらないことばです。
）

＞はろーわーるどめにゅー


＃目次：バージョン表示
＃なにもない。
＊てすとすぺーす01
\0なにもないのです。
……とみせかけて

現在のバージョンは（version表示）です\q[。,On設定変更_処理,でばっぐもーど,1,てすとすぺーす01]

（前面すこーぷ操作）（call,めにゅー末尾,めにゅー）



＃目次：でばっぐ関連
＃一部それぞれの言語の辞書ファイルに移動しています
＃でばっぐ_日本語系→dic100（ＪＰ）
＃でばっぐ_英語系→dic200（ＥＮ）
＃でばっぐ_アラビア語系→dic400（ＡＲ）
＊でばっぐ
\0\b[2]\![quicksection,true]《でばっぐめにゅー》

＿でばっぐ_サーフェス変更
＿でばっぐ_音声テスト
＿でばっぐ_ランダムソート
＿でばっぐ_Unicodeうめこみ
＿でばっぐ_文字サイズのそれ
＿なにか拾ってもらう	イベント_何かを拾う
＿でばっぐ_saori	saoriてすと
＿でばっぐ_ほにゃく

＿でばっぐ_日本語系
＿でばっぐ_英語系
＿でばっぐ_アラビア語系

＿でばっぐ_しふとじす

（前面すこーぷ操作）（call,めにゅー末尾,めにゅー）


＊でばっぐ_サーフェス変更
\0\![open,inputbox,サーフェス番号]
変更する番号を入力してください

＊サーフェス番号入力ぼっくす
\0（set,デフォルトサーフェス0,（サーフェス番号））（（デフォルトサーフェス0））
変更されました


（call,めにゅー末尾,でばっぐ）



＃（softalk（バイト値,1）/R:C:\\Users\\kazun\\Desktop\\つーる\\うかがか\\ghost\\VitreumRisum\\ghost\\master\\saori\\voice\\（Ａ０）.wav /W:（Ａ０））
＊でばっぐ_音声テスト
\0\b[2]\![quicksection,true]《音声処理関係》
＿でばっぐ_音声処理
＿でばっぐ_おーぷん
＿でばっぐ_くろーず

\![*]\q[音声設定,On設定変更_処理,音声フラグ,1,でばっぐ_音声テスト]φ
　　【現在φ：（whenlist,（音声フラグ）＝＝,0,音声なし,1,音声あり）】

\![*]\q[音声指定,On設定変更_処理,そふとーく指定制御,1,でばっぐ_音声テスト]　φ
　【現在φ：（whenlist,（そふとーく指定制御）＝＝,0,音源名,1,プリセット）】
\![*]\q[ぷりせっと,音声ぷりせっと設定を変える]φ
　【現在φ：0〜（ぷりせっとMax）】
\![*]\q[音量設定,On数字選択モジュール_0010,でばっぐ_音声テスト,そふとーく音量,0]　φ
　　【現在φ：（そふとーく音量）】


（call,めにゅー末尾,でばっぐ）


＊でばっぐ_音声処理
\0\![quicksection,true]（set,テスト名詞句,（連体修飾句））（call,OnSofTalk,（テスト名詞句））（テスト名詞句）


\q[もいちど,でばっぐ_音声処理]
（call,めにゅー末尾,でばっぐ_音声テスト）


＊でばっぐ_おーぷん
\0ひらきます
（softalk（バイト値,1）/Z:C:\\Users\\kazun\\Desktop\\つーる\\うかがか\\ghost\\VitreumRisum\\ghost\\master\\saori\\voice\\voicelist.txt　/X:0）

（call,めにゅー末尾,でばっぐ_音声テスト）


＊でばっぐ_くろーず
\0とじます
（softalk（バイト値,1）/close_now）

（call,めにゅー末尾,でばっぐ_音声テスト）



＊音声ぷりせっと設定を変える
\0\![open,inputbox,ぷりせっとMax]
上限値を設定してください

＊ぷりせっとMax入力ぼっくす
\00〜（ぷりせっとMax）に変更されました

（call,めにゅー末尾,でばっぐ_音声テスト）



＊でばっぐ_ランダムソート
\0\b[2]要素数は

\q[2,Onでばっぐ_ランダムソート処理,1]
\q[3,Onでばっぐ_ランダムソート処理,2]
\q[4,Onでばっぐ_ランダムソート処理,3]
\q[5,Onでばっぐ_ランダムソート処理,4]
\q[6,Onでばっぐ_ランダムソート処理,5]


（call,めにゅー末尾,でばっぐ）


＊Onでばっぐ_ランダムソート処理
\0\b[2]（for,0,（Ｒ０）,1,（単語の追加、ランダムソートリスト、Ａ（Ｃ０）））
（for,0,（Ｒ０）,1,
	（set,めも（Ｃ０）,（ランダムソートリスト））
	（めも（Ｃ０））
	（追加単語の削除、ランダムソートリスト、（めも（Ｃ０）））\n
）（追加単語の全削除、ランダムソートリスト）
＞でばっぐ_ランダムソート


＊でばっぐ_Unicodeうめこみ
\![open,inputbox,うにこでてすとA]

＊うにこでてすとA入力ぼっくす
\0\b[2]\![quicksection,true]（うにこでてすとA）
（call,uni,（うにこでてすとA））


（call,めにゅー末尾,でばっぐ）

＊でばっぐ_文字サイズのそれ
\0現在は（文字サイズ_テスト用）pixel

＿直接入力	でばっぐ_文字サイズのそれ_入力
＿文字指定表示テスト	でばっぐ_文字サイズのそれ_文字指定
＿なにかで表示テスト	でばっぐ_文字サイズのそれ_指定なし


（call,めにゅー末尾,でばっぐ）


＊でばっぐ_文字サイズのそれ_入力
\![open,inputbox,文字サイズ_テスト用]

＊文字サイズ_テスト用入力ぼっくす
\0（文字サイズ_テスト用）pixel

\f[height,（文字サイズ_テスト用）]あいうえお\f[height,default]


（call,めにゅー末尾,でばっぐ_文字サイズのそれ）


＊でばっぐ_文字サイズのそれ_文字指定
\![open,inputbox,うにこでてすとB]

＊うにこでてすとB入力ぼっくす
\0\b[2]\![quicksection,true]（call,文字サイズテスト表示やつ,（call,uni,（うにこでてすとB）））


（call,めにゅー末尾,でばっぐ_文字サイズのそれ）

＊でばっぐ_文字サイズのそれ_指定なし
\0\b[2]\![quicksection,true]（call,文字サイズテスト表示やつ,Aaあア亜1）


（call,めにゅー末尾,でばっぐ_文字サイズのそれ）

＠文字サイズテスト表示やつ
（for、8、24、1、 \f[height,（Ｃ０）]（Ｃ０）　（Ａ０）\n）\f[height,default]


＊saoriてすと
\0\b[2]\![quicksection,true]てすとやつ
Aφ：（さおりてすと_A）
Bφ：（さおりてすと_B）

＿Aうにこぴー	saoriてすとAうに代入
＿Aにゅうりょく	saoriてすとAにゅうりょく
\q[Bにゅうりょく,On数字選択モジュール_0001,saoriてすと,さおりてすと_B,0]

＿送信	saoriてすと送信

（call,めにゅー末尾,でばっぐ）

＊saoriてすとAうに代入
（set,さおりてすと_A,（uni文入れ0））
＞saoriてすと


＊saoriてすとAにゅうりょく
\![open,inputbox,さおりてすと_A]

（call,めにゅー末尾,saoriてすと）

＊さおりてすと_A入力ぼっくす
＞saoriてすと

＊saoriてすと送信
（saori_test,（さおりてすと_A）,（さおりてすと_B）,ghost,unicode_endecode）（Ｓ０）

（call,めにゅー末尾,saoriてすと）

＊でばっぐ_ほにゃく
\b[2]《ほにゃくめにゅー》
＿でばっぐ_思い付き
＿kisaragiほにゃく
＿しんぷるほにゃく
＿きさらぎてすと

\![*]\q[ほにゃくこてい,On設定変更_処理,ほにゃくこてい,1,でばっぐ_ほにゃく]φ
【現在φ：（whenlist,（ほにゃくこてい）＝＝,0,してい,1,らんだむ）】
\![*]\q[ほにゃくしてい,On数字選択モジュール_0001,でばっぐ_ほにゃく,ほにゃくしてい,0]φ：（ほにゃくしてい）

\![*]\q[せんてんすしんぷる,せんてんす_しんぷる_にゅうりょく]
【現在φ：（せんてんす_しんぷる）】

（call,めにゅー末尾,でばっぐ）


＊せんてんす_しんぷる_にゅうりょく
\![open,inputbox,せんてんす_しんぷる]

（call,めにゅー末尾,でばっぐ_ほにゃく）

＊せんてんす_しんぷる入力ぼっくす
＞でばっぐ_ほにゃく


＊でばっぐ_思い付き
＞fishと会話	（fishの存在）
いない
＞でばっぐ_ほにゃく

＊fishと会話
＄Value0	fish
＄Value2	ほにゃく
＄Value3	（短文入れ0）
：（短文入れ0）

（call,めにゅー末尾,でばっぐ_ほにゃく）

＊きさらぎてすと
はい
（kisaragi,wakati,これがほんです）
（Ｓ０）（Ｓ１）（Ｓ２）
（aya,moduletest,にゃん）
（aya,TOUPPER,abc）
nyan

（call,めにゅー末尾,でばっぐ_ほにゃく）

＊kisaragiほにゃく
\b[2]（set,せんてんす_もと,（短文入れ0））φ
（set,せんてんす_わかち,（nop,（kisaragi,wakati,（せんてんす_もと）））（Ｓ０））φ
（set,せんてんす_よみ,（nop,（kisaragi,yomi,（せんてんす_わかち）））（Ｓ０））φ
（set,せんてんす_ほにゃく
	,（call,honyaku
		,（hira2kata,（せんてんす_よみ））
		,（when,（ほにゃくこてい）＝＝0,（ほにゃくしてい）,（乱数1〜5））
	）
）φ
もと　　φ：（せんてんす_もと）
わかち　φ：（せんてんす_わかち）
よみ　　φ：（せんてんす_よみ）
ほにゃくφ：（call,uni,（せんてんす_ほにゃく））

＿もっかい	kisaragiほにゃく

（call,めにゅー末尾,でばっぐ_ほにゃく）

＊しんぷるほにゃく
\b[2]（set,せんてんす_もと,（せんてんす_しんぷる））φ
（set,せんてんす_ほにゃく
	,（call,honyaku
		,（hira2kata,（せんてんす_しんぷる））
		,（when,（ほにゃくこてい）＝＝0,（ほにゃくしてい）,（乱数1〜5））
	）
）φ
しんぷるφ：（せんてんす_しんぷる）
ほにゃくφ：（call,uni,（せんてんす_ほにゃく））

＿もっかい	しんぷるほにゃく
＿にゅうりょく	せんてんす_しんぷる_にゅうりょく

（call,めにゅー末尾,でばっぐ_ほにゃく）



＃（call,てんしゃえんこーど,（call,きさらぎ,これはほんです））

＃目次：複数個所から呼ばれる関数的なコーナー

＃（前面すこーぷ操作）
＠前面すこーぷ操作
（when,（前面表示もーど）＝＝1,\1）


＃（call,めにゅー末尾,（戻り先））
＃（call,めにゅー末尾,）
＠めにゅー末尾
\q[もどる,（Ａ０）]\n\q[とじる,めにゅー_終了]

＃終了は全部ここに飛ばしている
＊めにゅー_終了
\0インターフェース 終了します


＃（call,uni,0048_0065_006C_006C_006F_0020_0057_006F_0072_006C_0064_0021）
＃うにこーどのあれをあんだーばーで繋いだあれをぶち込むとあれしてくれます。
＃なんとサロゲートペアでも書字方向逆でもなんとかしてくれる。えらい。
＠uni
（set,うにこでもじすう,（split,（Ａ０）,_,0,0））（for,0,（うにこでもじすう）-1,1,\_u[0x（Ｓ（Ｃ０））]）


＠てんしゃえんこーど
（call,uni,
	（call,honyaku
		,（hira2kata,（Ａ０））
		,（when,（ほにゃくこてい）＝＝0,（ほにゃくしてい）,（乱数1〜5））
	）
）

＠きさらぎ
（nop,（kisaragi,yomi,（nop,（kisaragi,wakati,（Ａ０）））（Ｓ０）））（Ｓ０）


＃それのためだけにあるやつ
＠羽根呼び出し
（nswitch,（Ａ０）,手前1,手前2,手前3,奥側1,奥側2,奥側3）

＠羽根ランダム数字
（sprintf,%02d,（乱数1〜27））

＠羽根色シャッフル
\0（whenlist,（羽根色_変更パターン）＝＝
	,0,（for、1、6、1、（set,（call,羽根呼び出し,（Ｃ０））,（羽根ランダム数字）））
	,1,（for、1、3、1、（set,手前（Ｃ０）,（羽根ランダム数字））（set,奥側（Ｃ０）,（手前（Ｃ０））））
	,2,（set,手前1,（羽根ランダム数字））（set,奥側1,（羽根ランダム数字））
		（for、2、3、1、（set,手前（Ｃ０）,（手前1））（set,奥側（Ｃ０）,（奥側1）））
	,3,（set,手前1,（羽根ランダム数字））
		（for、2、6、1、（set,（call,羽根呼び出し,（Ｃ０））,（手前1）））
）（for、1、6、1、\![bind,羽根_（call,羽根呼び出し,（Ｃ０））,（（call,羽根呼び出し,（Ｃ０）））,1]）



＠箱呼び出しA
（nswitch,（Ａ０）,soko,usiro,hidari,migi,mae,ue）

＠箱呼び出しB
（nswitch,（Ａ０）,haimenwaku,zenmenwaku）

＠箱面ランダム数字
（sprintf,%02d
	,（whenlist,（箱色_透明度）＝＝
		,1,（乱数1〜26）
		,2,（乱数51〜76）
		,（choice,（乱数1〜26）,（乱数51〜76））
	）
）

＠箱枠ランダム数字
（sprintf,%02d,
	（whenlist,（箱色_枠線種別）＝＝
		,1,（乱数1〜26）
		,2,（乱数51〜76）
		,（choice,（乱数1〜26）,（乱数51〜76））
	）
）

＠箱色シャッフル
\0（for、1、6、1、（set,（call,箱呼び出しA,（Ｃ０））,（箱面ランダム数字）））（for、1、2、1、（set,（call,箱呼び出しB,（Ｃ０））,（箱枠ランダム数字））
）（for、1、6、1、\![bind,（call,箱呼び出しA,（Ｃ０））,（（call,箱呼び出しA,（Ｃ０）））,1]
）（when、（箱色_枠線有無）＝＝0＆＆（乱数1〜2）＝＝1｜｜（箱色_枠線有無）＝＝1
	、（for、1、2、1、\![bind,（call,箱呼び出しB,（Ｃ０））,（（call,箱呼び出しB,（Ｃ０）））,1]）
	、（for、1、2、1、\![bind,（call,箱呼び出しB,（Ｃ０））,,0]）
）


＃音声再生やつ
＠OnSofTalk
（whenlist,（そふとーく指定制御）＝＝
	,0,（set,そふとーく音源名,（音源名リスト））（softalk（バイト値,1）/V:（そふとーく音量） /S:（乱数100〜200） /NM:（そふとーく音源名） /W:（Ａ０））
	,1,（set,ぷりせっと,（乱数0〜（ぷりせっとMax）））（softalk（バイト値,1）/N:（ぷりせっと） /W:（Ａ０））
）


＃数字を選択させるやつ
＃\q[※らべる,On数字選択モジュール_0010,※戻り先名,※使用変数名,※引継ぎ値]
＊On数字選択モジュール_0010
（set,（Ｒ１）,（（Ｒ２）））現在値「（Ｒ２）」

（for、0、90、10
	、\![*]\q[（sprintf,%02d,（Ｃ０）） ,On数字選択モジュール_0001,（Ｒ０）,（Ｒ１）,（calc,（Ｒ２）＋（Ｃ０））]（when,（Ｃ０）＝＝40,\n）
）

＊On数字選択モジュール_0001
（set,（Ｒ１）,（Ｒ２））現在値「（Ｒ２）」

（for、0、9、1
	、\![*]\q[（Ｃ０） ,On数字選択モジュール_last,（Ｒ０）,（Ｒ１）,（calc,（Ｒ２）＋（Ｃ０））]（when,（Ｃ０）＝＝4,\n）
）

＊On数字選択モジュール_last
（set,（Ｒ１）,（Ｒ２））\p[3]
＞（Ｒ０）


＃\q[（ラベル）,On設定代入_処理,（代入先変数名）,（代入する文字列）,（呼び出し元）]
＊On設定代入_処理
（set,（Ｒ０）,（Ｒ１））
＞（Ｒ２）



＃目次：なんかするやつ
＃文字列コピー、拾得、おんどく、てんしゃ

＃Ｒ０：文字コード（SJIS or UTF8）
＃Ｒ１：本文のやつ（SJIS：こんにちは、UTF8：3053_3093_306B_3061_306F）
＃Ｒ２：元トーク識別
＃Ｒ３以降：元トークに戻るとき必要なやつ
＃\q[こぴー,On文字列コピー,（Ｒ０）,（Ｒ１）,持ち物個別表示_処理,（Ｒ２）,（Ｒ３）]
＊On文字列コピー
\![open,communicatebox,（Ｒ１）]φ
（whenlist、（Ｒ２）＝＝
	、らんだむとーく_もういっかい_処理、（call,らんだむとーく_もういっかい_処理,（Ｒ０）,（Ｒ３））
	、持ち物個別表示_処理、（call,持ち物個別表示_処理,（Ｒ０）,（Ｒ１）,（Ｒ３）,（Ｒ４））
	、ないんですよ
）


＃Ｒ０：文字コード（SJIS or UTF8）
＃Ｒ１：本文のやつ（SJIS：こんにちは、UTF8：3053_3093_306B_3061_306F）
＃Ｒ２：元トーク識別
＃Ｒ３以降：元トークに必要なやつ
＃\q[こぴー,On文字列コピー,（Ｒ０）,（Ｒ１）,持ち物個別表示_処理,（Ｒ２）,（Ｒ３）]
＊On持ち物拾得_ユーザー
（whenlist,（Ｒ０）＝＝
	,SJIS,（set,持ち物_ユーザー,（持ち物_ユーザー）_（Ｒ１））
	,UTF8,（set,持ち物_ユーザー_uni,（持ち物_ユーザー_uni）と（Ｒ１））
）φ
（whenlist、（Ｒ２）＝＝
	、らんだむとーく_もういっかい_処理、（call,らんだむとーく_もういっかい_処理,（Ｒ０）,（Ｒ３））
	、持ち物個別表示_処理、（call,持ち物個別表示_処理,（Ｒ０）,（Ｒ１）,（Ｒ３）,（Ｒ４））
	、ないのでは
）
\0\n……取得しました

＃Ｒ０：文字コード（SJIS or UTF8）
＃Ｒ１：本文のやつ（SJIS：こんにちは、UTF8：3053_3093_306B_3061_306F）
＃Ｒ２：元トーク識別
＃Ｒ３以降：元トークに必要なやつ
＃\q[こぴー,On文字列コピー,（Ｒ０）,（Ｒ１）,持ち物個別表示_処理,（Ｒ２）,（Ｒ３）]
＊Onおんどく
（when,（音声フラグ）＝＝1
	,（whenlist,（Ｒ０）＝＝
		,SJIS,（call,OnSofTalk,（Ｒ１））
		,UTF8,（call,OnSofTalk,（Ｒ１））
	）
	,声が出ません。
）φ
（whenlist、（Ｒ２）＝＝
	、らんだむとーく_もういっかい_処理、（call,らんだむとーく_もういっかい_処理,（Ｒ０）,（Ｒ３））
	、持ち物個別表示_処理、（call,持ち物個別表示_処理,（Ｒ０）,（Ｒ１）,（Ｒ３）,（Ｒ４））
	、ないらしい
）

＃Ｒ０：文字コード（SJIS or UTF8）
＃Ｒ１：本文のやつ（SJIS：こんにちは、UTF8：3053_3093_306B_3061_306F）
＃Ｒ２：元トーク識別
＃Ｒ３以降：元トークに必要なやつ
＃\q[こぴー,On文字列コピー,（Ｒ０）,（Ｒ１）,持ち物個別表示_処理,（Ｒ２）,（Ｒ３）]
＊On文字列転写_きさらぎ
（whenlist、（Ｒ２）＝＝
	、らんだむとーく_もういっかい_処理、（call,らんだむとーく_もういっかい_処理,（Ｒ０）,（Ｒ３））\0
	、持ち物個別表示_処理、（call,持ち物個別表示_処理,（Ｒ０）,（Ｒ１）,（Ｒ３）,（Ｒ４））\0
	、ほにゃくめにゅー、\1（Ｒ１）
	、ないyo
）
\n（whenlist,（Ｒ０）＝＝
	,SJIS,φ→　（call,てんしゃえんこーど,（call,きさらぎ,（Ｒ１）））
）
＞ほにゃくめにゅー	（Ｒ２）＝＝ほにゃくめにゅー

＊On文字列転写_しんぷる
（whenlist、（Ｒ２）＝＝
	、らんだむとーく_もういっかい_処理、（call,らんだむとーく_もういっかい_処理,（Ｒ０）,（Ｒ３））\0
	、持ち物個別表示_処理、（call,持ち物個別表示_処理,（Ｒ０）,（Ｒ１）,（Ｒ３）,（Ｒ４））\0
	、ほにゃくめにゅー、\1（Ｒ１）
	、ないdesu
）
\n（whenlist,（Ｒ０）＝＝
	,SJIS,→　（call,てんしゃえんこーど,（Ｒ１））
）
＞ほにゃくめにゅー	（Ｒ２）＝＝ほにゃくめにゅー




＃目次：ネットワーク更新やつ
＊OnUpdateBegin
\0更新情報を取得中です……

＃ネットワーク更新が確認された時、ベースウェアから呼び出されます。
＃（Ｒ０）には更新されたファイル数が入っています。
＊OnUpdateReady
\0（Ｒ０）個のファイルが更新されています。

＃ネットワーク更新が完了した時、ベースウェアから呼び出されます。
＃（Ｒ０）には成功理由が入っています。（changed＝更新成功、none＝更新がなかった）
＃none（更新無し）以外なら、ゴーストがリロードされます。
＊OnUpdateComplete
＞ネットワーク更新（Ｒ０）
\0（Ｒ０）

＃ネットワーク更新が失敗した時、ベースウェアから呼び出されます。
＃（Ｒ０）には失敗理由が入っています。
＃（例：md5 miss＝更新ファイルupdates2.dauを作らずに、辞書ファイルだけサーバにあげている）
＊OnUpdateFailure
＞ネットワーク更新（Ｒ０）
\0ネットワーク更新に失敗しました。
（Ｒ０）

＊ネットワーク更新none
\0更新されていません。

＊ネットワーク更新changed
\0ネットワーク更新、無事終了しました。

＊ネットワーク更新404
\0更新用ファイルが見つかりませんでした。

＊ネットワーク更新artificial
\0中断します。